/*
 * Mandatory:
 *
 * vars.nginx.hosts[]
 * vars.nginx.workerProcesses
 * vars.nginx.workerConnections
 * vars.nginx.clientMaxBodySize
 */
bb-nginx-config-yaml(parent, vars) ::= <<
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx
  namespace: graphite-andrea
  labels:
    app: nginx
    robobeerun.com/group: graphite
data:
  nginx.conf: |
    worker_processes  <vars.nginx.workerProcesses>;
    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;
    events {
        worker_connections  <vars.nginx.workerConnections>;
    }
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';
        access_log  /var/log/nginx/access.log  main;
        sendfile        on;
        tcp_nopush     on;
        tcp_nodelay on;
        keepalive_timeout  65;
        gzip  on;
        index index.php index.html index.htm;
        client_max_body_size <vars.nginx.clientMaxBodySize>;
        server {
            listen 8080 default_server;
            listen [::]:8080 default_server;
            root /opt/graphite/static;
            server_name <vars.nginx.hosts;separator=" ">;
            index index.html;
            #
            location = /favicon.ico {
              log_not_found off;
              access_log off;
            }
            #
            location = /robots.txt {
              allow all;
              log_not_found off;
              access_log off;
            }
            # Deny all attempts to access hidden files such as .htaccess, 
            # .htpasswd, .DS_Store (Mac). 
            # Keep logging the requests to parse later (or to pass to firewall
            # utilities such as fail2ban)
            location ~ /\. {
              deny all;
            }
            #
            location /media {
              # django admin static files
              alias /usr/local/lib/python2.7/dist-packages/django/contrib/admin/media/;
            }
            #
            location /admin/auth/admin {
              alias /usr/local/lib/python2.7/dist-packages/django/contrib/admin/static/admin;
            }
            #
            location /admin/auth/user/admin {
              alias /usr/local/lib/python2.7/dist-packages/django/contrib/admin/static/admin;
            }
            #
            location / {
              proxy_pass http://localhost:9090;
              proxy_set_header  Host      $host;
              proxy_set_header  X-Real-IP $remote_addr;
              proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
              add_header 'Access-Control-Allow-Origin' '*';
              add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
              add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
              add_header 'Access-Control-Allow-Credentials' 'true';
            }
        }
    }

>>
